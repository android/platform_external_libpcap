libpcap_cflags = [
    "-Wno-unused-parameter",
    "-D_BSD_SOURCE",
    "-D_U_=__attribute__((unused))",
    "-Werror",
]

cc_library {
    name: "libpcap",

		vendor_available: true,
    srcs: [
        "pcap-linux.c",
        "pcap-usb-linux.c",
        "pcap-can-linux.c",
        "pcap-netfilter-linux-android.c",
        "fad-gifc.c",
        "pcap.c",
        "inet.c",
        "gencode.c",
        "optimize.c",
        "nametoaddr.c",
        "etherent.c",
        "savefile.c",
        "sf-pcap.c",
        "sf-pcap-ng.c",
        "pcap-common.c",
        "bpf/net/bpf_filter.c",
        "bpf_image.c",
        "bpf_dump.c",
        "version.c",
        // Generated on the host with `configure && make` and copied across.
				"grammar.c",
				"scanner.c",
    ],

    cflags: libpcap_cflags +
		        ["-Wno-sign-compare",
		         "-DHAVE_CONFIG_H",
		         // For ffs(3).
             "-include strings.h",
            ],

    export_include_dirs: ["."],
}

cc_defaults {
  name: "libpcap_test_defaults",
  static_libs: ["libpcap"],
	cflags: libpcap_cflags,
}

cc_test {
    name: "libcap_capturetest",

		defaults: ["libpcap_test_defaults"],

		srcs: ["tests/capturetest.c"],
}

cc_test {
    name: "libcap_filtertest",

		defaults: ["libpcap_test_defaults"],

		srcs: ["tests/filtertest.c"],
}

cc_test {
    name: "libcap_findalldevstest",

		defaults: ["libpcap_test_defaults"],

		srcs: ["tests/findalldevstest.c"],
}

cc_test {
    name: "libcap_opentest",

		srcs: ["tests/opentest.c"],

		defaults: ["libpcap_test_defaults"],
}

cc_test {
    name: "libcap_reactivatetest",

		defaults: ["libpcap_test_defaults"],

		srcs: ["tests/reactivatetest.c"],
}

cc_test {
    name: "libcap_selpolltest",

		defaults: ["libpcap_test_defaults"],

		srcs: ["tests/selpolltest.c"],
}

cc_test {
    name: "libcap_valgrindtest",

		defaults: ["libpcap_test_defaults"],

		srcs: ["tests/valgrindtest.c"],
}
