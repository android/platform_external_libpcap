// Copyright (C) 2018 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

cc_defaults {
    name: "libpcap_defaults",
    cflags: [
        "-D_BSD_SOURCE",
        "-DHAVE_CONFIG_H",
        "-Dlint",
        "-D_U_=__attribute__((__unused__))",
        "-Wall",
        "-Werror",
        "-Wno-macro-redefined",
        "-Wno-pointer-arith",
        "-Wno-sign-compare",
        "-Wno-unused-parameter",
        "-Wno-unused-result",
        "-Wno-tautological-compare",
    ],
}

cc_library {
    name: "libpcap",
    host_supported: false,
    vendor_available: true,
    vndk: {
        enabled: true,
    },
    defaults: ["libpcap_defaults"],

    // (Matches order in libpcap's Makefile.)
    srcs: [
        "pcap-linux.c",
        "pcap-usb-linux.c",
        "pcap-netfilter-linux-android.c",
        "fad-getad.c",
        "pcap.c",
        "inet.c",
        "fad-helpers.c",
        "gencode.c",
        "optimize.c",
        "nametoaddr.c",
        "etherent.c",
        "savefile.c",
        "sf-pcap.c",
        "sf-pcap-ng.c",
        "pcap-common.c",
        "bpf_image.c",
        "bpf_dump.c",
        "scanner.c",
        "grammar.c",
        "bpf_filter.c",
        "version.c",
    ],

    export_include_dirs: ["."],
}

//
// Tests.
//
// (Matches order in libpcap's Makefile.)
//

cc_defaults {
    name: "libpcap_test_defaults",
    defaults: ["libpcap_defaults"],
    static_libs: ["libpcap"],
}

cc_binary {
    name: "libpcap_capturetest",
    defaults: ["libpcap_test_defaults"],
    srcs: ["tests/capturetest.c"],
}

cc_binary {
    name: "libpcap_can_set_rfmon_test",
    defaults: ["libpcap_test_defaults"],
    srcs: ["tests/can_set_rfmon_test.c"],
}

cc_binary {
    name: "libpcap_filtertest",
    defaults: ["libpcap_test_defaults"],
    srcs: ["tests/filtertest.c"],
}

cc_binary {
    name: "libpcap_findalldevstest",
    defaults: ["libpcap_test_defaults"],
    srcs: ["tests/findalldevstest.c"],
}

cc_binary {
    name: "libpcap_opentest",
    defaults: ["libpcap_test_defaults"],
    srcs: ["tests/opentest.c"],
}

cc_binary {
    name: "libpcap_reactivatetest",
    defaults: ["libpcap_test_defaults"],
    srcs: ["tests/reactivatetest.c"],
}

cc_binary {
    name: "libpcap_selpolltest",
    defaults: ["libpcap_test_defaults"],
    srcs: ["tests/selpolltest.c"],
}
